#pragma once

namespace vcl {
namespace lines {

struct Color
{
    float r, g, b, a;

    Color() : r(0.0f), g(0.0f), b(0.0f), a(1.0f) {}

    Color(float rr, float gg, float bb, float aa) : 
        r(rr), g(gg), b(bb), a(aa) {}
};

struct Point
{
    float x, y, z;
    Color color;

    Point(float xx, float yy, float zz, Color c = Color()) :
            x(xx), y(yy), z(zz), color(c) {}
};

enum Types {
    CPU_GENERATED,    // vertex buffer generated by CPU
    GPU_GENERATED,    // vertex buffer generated by GPU using compute shader
    INSTANCING_BASED, // generated lines by instancing buffer
    INDIRECT_BASED,   // instancing with indirect buffer filled with compute
    TEXTURE_BASED     // instancing with indirect usning text buffer
};

enum Caps { BUTT_CAP = 0, SQUARE_CAP = 1, ROUND_CAP = 2 };

enum Joins { ROUND_JOIN = 0, BEVEL_JOIN = 1, MITER_JOIN = 2 };

} // namespace lines

} // namespace vcl
